using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Configuration;
using System.Web.UI;
using System.Web.UI.WebControls;
using Lumex.Project.BLL;
using Lumex.Tech;

namespace lmxIpos.UI.Book
{
    public partial class Create : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                if (!IsPostBack)
                {
                    LoadMainLanguage();
                    LoadTranslateLanguage();
                }
            }
            catch (Exception)
            {
                
                //throw;
            }
        }

        private void LoadTranslateLanguage()
        {
            BookBLL bookBll = new BookBLL();
            DataTable dt = bookBll.GetLanguageList();
            try
            {
                translatedLanguageDropDownList.DataSource = dt;
                translatedLanguageDropDownList.DataValueField = "Serial";
                translatedLanguageDropDownList.DataTextField = "LanguageName";
                translatedLanguageDropDownList.DataBind();
                translatedLanguageDropDownList.Items.Insert(0, "");
                translatedLanguageDropDownList.SelectedIndex = 0;
            }
            catch (Exception ex)
            {
                msgbox.Visible = true; msgTitleLabel.Text = "Exception!!!"; msgDetailLabel.Text = ex.Message;
            }
            finally
            {
                bookBll = null;
            }
        }

        private void LoadMainLanguage()
        {
           BookBLL bookBll=new BookBLL();
           DataTable dt = bookBll.GetLanguageList();

            try
            {
                mainLanguageDropDownList.DataSource = dt;
                mainLanguageDropDownList.DataValueField = "Serial";
                mainLanguageDropDownList.DataTextField = "LanguageName";
                mainLanguageDropDownList.DataBind();
                mainLanguageDropDownList.Items.Insert(0, "");
                mainLanguageDropDownList.SelectedIndex = 0;
            }
            catch (Exception ex)
            {
                msgbox.Visible = true; msgTitleLabel.Text = "Exception!!!"; msgDetailLabel.Text = ex.Message;
            }
            finally
            {
                bookBll = null;
            }
        }

      
        protected void btnSave_OnClick(object sender, EventArgs e)
        {
            BookBLL aBook = new BookBLL();
            bool status = false;
            try
            {
                if (txtbxNo.Text == "")
                {
                    msgbox.Visible = true;
                    msgTitleLabel.Text = "Validation!!!";
                    msgDetailLabel.Text = "Book No field is required.";
                }
                else if (txtbxKitaberSerialNo.Text == "")
                {
                    msgbox.Visible = true;
                    msgTitleLabel.Text = "Validation!!!";
                    msgDetailLabel.Text = " Book Serial field is required.";
                }
                else if (txtbxKitaberMainName.Text == "")
                {
                    msgbox.Visible = true;
                    msgTitleLabel.Text = "Validation!!!";
                    msgDetailLabel.Text = "Book Main Name field is required.";
                }
                else if (txtbxWritter.Text == "")
                {
                    msgbox.Visible = true;
                    msgTitleLabel.Text = "Validation!!!";
                    msgDetailLabel.Text = "Writter Name field is required.";
                }
                else
                {

                    aBook.No = txtbxNo.Text.Trim();
                    aBook.KitaberSerialNo = (txtbxKitaberSerialNo.Text.Trim());
                    aBook.AlmariNo = txtbxAlmariNo.Text.Trim();
                    aBook.TakNo = txtbxTakNo.Text.Trim();
                    aBook.KolamNo = txtbxKolamNo.Text.Trim();
                    aBook.KitabNo = txtbxKitabNo.Text.Trim();
                    aBook.CopyNo = txtbxCopyNumber.Text.Trim();
                    aBook.TotalVolumeNo = txtbxTotalVolume.Text.Trim();
                    aBook.VolumeNo = txtbxVolumeNo.Text.Trim();
                    aBook.KhondoNo = txtbxKhondoNo.Text.Trim();
                    aBook.PageNumber = txtbxPageNo.Text.Trim();
                    aBook.Price = (txtbxPrice.Text.Trim());
                    aBook.KitaberMainName = txtbxKitaberMainName.Text.Trim();
                    aBook.KitaberMashurName = txtbxKitaberSpecialName.Text.Trim();
                    aBook.Writter = txtbxWritter.Text.Trim();
                    aBook.WritterBirthYear = txtbxWritterBornDate.Text.Trim();
                    aBook.WritterDeathYear = txtbxWritterDeathDate.Text.Trim();
                    aBook.WritterMajhab = txtbxWritterMajhab.Text.Trim();
                    aBook.Songkolok = txtbxSongkolp.Text.Trim();
                    aBook.Translator = txtbxTranslator.Text.Trim();
                    aBook.TranslatorDate = txtbxTranslatorsDate.Text.Trim();
                    aBook.TranslatorMajhab = txtbxTranslatorMajhab.Text.Trim();
                    aBook.KitaberMainLanguage = mainLanguageDropDownList.SelectedValue;
                    aBook.KitaberTranslateLanguage = translatedLanguageDropDownList.SelectedValue;
                    aBook.Subject = txtbxSubject.Text.Trim();
                    aBook.Chapter = txtbxChapter.Text.Trim();
                    aBook.Publisher = txtbxProkashok.Text.Trim();
                    aBook.PublishDate = txtbxProkashkal.Text.Trim();
                    aBook.Publication = txtbxProkashoni.Text.Trim();
                    aBook.PublicationPlace = txtbxProkashsthan.Text.Trim();
                    aBook.Sompadona = txtbxSompadona.Text.Trim();
                    aBook.Songskoron = txtbxSongokoron.Text.Trim();
                    aBook.Summary = txtbxSarSonkhep.Text.Trim();
                    aBook.Comment = txtbxComment.Text.Trim();
                    if (!aBook.CheckDuplicate())
                    {
                        status = aBook.SaveBook();
                        if (status)
                        {
                           string message = " <span class='actionTopic'>" + " Book Entry was successful!!";
                            MyAlertBox(
                                "var callbackOk = function () { window.location = \"/UI/Library/Book/list.aspx\"; }; WarningAlert(\"" +
                                "Process Succeed" + "\", \"" + message + "\", callbackOk);");
                        }
                        else
                        {

                            string message = " <span class='actionTopic'>" + " Book Entry Failed!!";
                            MyAlertBox(
                                "var callbackOk = function () { window.location = \"/UI/Library/Book/Create.aspx\"; }; WarningAlert(\"" +
                                "Process Succeed" + "\", \"" + message + "\", callbackOk);");
                        }
                    }
                    else
                    {

                        string message = " <span class='actionTopic'>" + " Book Already Exists!!";
                        MyAlertBox(
                            "var callbackOk = function () { window.location = \"/UI/Book/Create.aspx\"; }; WarningAlert(\"" +
                            "Process Succeed" + "\", \"" + message + "\");");
                    }
                }
            }
            catch (Exception)
            {

                //throw;
            }
        }
        protected void MyAlertBox(string alertScript)
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "ServerControlScript", alertScript, true);
        }
        protected void AlertBox(string msg)
        {
            string message = msg;
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            sb.Append("alert('");
            sb.Append(message);
            sb.Append("');");
            ClientScript.RegisterOnSubmitStatement(this.GetType(), "alert", sb.ToString());
           

        }

        protected void btnimport_Click(object sender, EventArgs e)
        {
            StreamReader reader = null;
            bool status = false;
            string path =
                           HttpContext.Current.Server.MapPath(WebConfigurationManager.AppSettings["attachmentPath"] +
                                                              "/tempCSV/");
            try
            {
                FileUpload librarycvs = new FileUpload();
                librarycvs = FileUpload1;

                if (librarycvs.HasFile)
                {
                    string chkExtension = Path.GetExtension(librarycvs.FileName);
                    // string ppImg = ImgID + Path.GetExtension(productImg.FileName);

                    if (chkExtension.ToLower() == ".csv")
                    {


                        if (!Directory.Exists(path))
                        {
                            Directory.CreateDirectory(path);
                        }
                        String userId = LumexSessionManager.Get("ActiveUserId").ToString();
                        path = path + @"\" + userId + ".csv";

                        librarycvs.PostedFile.SaveAs(path);


                        //need to implement here.
                        reader = new StreamReader(File.OpenRead(path));
                        int linecount = 0;
                        int dupcount = 0;
                        while (!reader.EndOfStream)
                        {

                            var line = reader.ReadLine();
                            if (linecount != 0)
                            {
                                var pinfos = line.Split(',');
                                BookBLL bookBll=new BookBLL();

                                bookBll.No = pinfos[0];
                                bookBll.KitaberSerialNo = (pinfos[1]);
                                bookBll.AlmariNo = pinfos[2];
                                bookBll.TakNo = pinfos[3];
                                bookBll.KolamNo = pinfos[4];
                                bookBll.KitabNo = pinfos[5];
                                bookBll.CopyNo = pinfos[6];
                                bookBll.KitaberMainName = pinfos[7];
                                bookBll.KitaberMashurName = pinfos[8];
                                bookBll.Writter = pinfos[9];
                                bookBll.WritterBirthYear = pinfos[10];
                                bookBll.WritterDeathYear = pinfos[11];
                                bookBll.WritterMajhab = pinfos[12];
                                bookBll.Songkolok = pinfos[13];
                                bookBll.Translator = pinfos[14];
                                bookBll.TranslatorDate = pinfos[15];
                                bookBll.TranslatorMajhab = pinfos[16];
                                bookBll.KitaberMainLanguage = pinfos[17];
                                bookBll.KitaberTranslateLanguage = pinfos[18];
                                bookBll.TotalVolumeNo = pinfos[19];
                                bookBll.VolumeNo = pinfos[20];
                                bookBll.KhondoNo = pinfos[21];
                                bookBll.Subject = pinfos[22];
                                bookBll.Chapter = pinfos[23];
                                bookBll.Summary = pinfos[24];
                                bookBll.PageNumber = pinfos[25];
                                bookBll.Publisher = pinfos[26];
                                bookBll.PublishDate = pinfos[27];
                                bookBll.Publication = pinfos[28];
                                bookBll.PublicationPlace = pinfos[29];
                                bookBll.Sompadona = pinfos[30];
                                bookBll.Songskoron = pinfos[31];
                                bookBll.Price = (pinfos[32]);
                                bookBll.Comment = pinfos[33];

                                if (!bookBll.CheckDuplicate())
                                {
                                    status = bookBll.SaveBook();

                                }
                                else
                                {
                                    dupcount++;
                                }

                            }
                            linecount++;
                        }
                        linecount--;
                        //reader.Close();
                        if (linecount > 0)
                        {
                            string message = linecount +
                                " Book <span class='actionTopic'></span> Successfully imported.";
                            MyAlertBox(
                                "var callbackOk = function () { MyOverlayStop(); window.location = \"/UI/Library/Book/List.aspx\"; }; SuccessAlert(\"" +
                                "Process Succeed" + "\", \"" + message + "\", callbackOk);");
                            
                        }


                    }
                    else
                    {
                        string message = "Only CSV File is allowed";
                        MyAlertBox("WarningAlert(\"" + "Validation" + "\", \"" + message + "\");");
                    }
                }
                else
                {
                    string message = " <span class='actionTopic'>" + "You are Not select any CSV file!</span>.";
                    MyAlertBox("WarningAlert(\"" + "Validation" + "\", \"" + message + "\");");

                }

            }
            catch (Exception ex)
            {

                string message = ex.Message;
                if (ex.InnerException != null)
                {
                    message += " --> " + ex.InnerException.Message;
                }
                MyAlertBox("ErrorAlert(\"" + ex.GetType() + "\", \"" + message + "\", \"\");");
            }

            finally
            {
                if (reader != null)
                {
                    reader.Close();
                    File.Delete(path);
                }
            }
        }



        public FileUpload librarycvs { get; set; }
    }
}