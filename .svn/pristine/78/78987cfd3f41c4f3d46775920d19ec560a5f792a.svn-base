using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Lumex.Project.BLL;
using Lumex.Tech;

namespace lmxIpos.UI.Library.Book
{
    public partial class Search : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                //checkBoxName.InputAttributes.Add("Value", "BName");
                //checkBoxWritterName.InputAttributes.Add("Value", "WName");
                //checkBoxPublisherName.InputAttributes.Add("Value", "PName");
                //checkBoxLanguage.InputAttributes.Add("Value", "LName");
            }
        }

        protected void btnSearch_OnClick(object sender, EventArgs e)
        {
            int check = 0;
            BookBLL bookBll = new BookBLL();
            bookBll.BookName = "";
            bookBll.Writter = "";
            bookBll.Publisher = "";
            bookBll.KitaberMainLanguage = "";
            string querry = "";
            string name = txtbxSearch.Text.Trim();
            try
            {

                foreach (ListItem listItem in bookCheckBoxList.Items)
                {
                    if (listItem.Selected)
                    {
                        check++;
                        switch (listItem.Value)
                        {
                            case "BN":
                            {
                                if (querry == "")
                                {
                                    querry = "[BookName] LIKE '%" + name.Trim() + "%'";
                                }
                                else
                                {
                                    querry = "or [BookName] LIKE '%" + name.Trim() + "%'";
                                }

                                break;
                            }
                            case "WN":
                            {
                                if (querry == "")
                                {
                                    querry += "[WriterName] LIKE '%" + name.Trim() + "%'";
                                }
                                else
                                {
                                    querry += "or " + "[WriterName] LIKE '%" + name.Trim() + "%'";
                                }

                                break;
                            }
                            case "PN":
                            {
                                if (querry == "")
                                {
                                    querry += "[Publisher] LIKE '%" + name.Trim() + "%'";
                                }
                                else
                                {
                                    querry += "or " + "[Publisher] LIKE '%" + name.Trim() + "%'";
                                }

                                break;
                            }
                            case "BL":
                            {
                                if (querry == "")
                                {
                                    querry += "[BookLanguage] LIKE '%" + name.Trim() + "%'";
                                }
                                else
                                {
                                    querry += "or " + "[BookLanguage] LIKE '%" + name.Trim() + "%'";
                                }

                                break;
                            }
                            default:
                            {
                                continue;
                            }
                        }

                    }

                }
                if (check <= 0)
                {
                    msgbox.Visible = true;
                    msgTitleLabel.Text = "Validation!!!";
                    msgDetailLabel.Text = "Please Select Any CheckBox";
                }
                else
                {


                    DataTable dt = new DataTable();
                    StringBuilder output = new StringBuilder(querry.Length);

                    for (int index = 0; index < querry.Length; index++)
                    {
                        if (!Char.IsWhiteSpace(querry, index))
                        {
                            output.Append(querry[index]);
                        }
                    }
                    dt = bookBll.SearchForBook(output.ToString());
                    if (dt.Rows.Count > 0)
                    {
                        infoBody.Visible = true;
                        dt = bookBll.GetBookList();
                        if (dt.Rows.Count > 0)
                        {
                            bookListGridView.DataSource = dt;
                            bookListGridView.DataBind();
                        }
                        GridViewStyle();
                        //GetSearchedBookList(dt);  
                    }
                    else
                    {
                        string message = "Book Not <span class='actionTopic'> Found</span>.";
                        MyAlertBox("SuccessAlert(\"" + "Process Succeed" + "\", \"" + message + "\", \"\");");
                    }


                }
            }

            catch (Exception)
            {

                throw;
            }
        }
        private void GridViewStyle()
        {
            if (bookListGridView.Rows.Count > 0)
            {
                bookListGridView.UseAccessibleHeader = true;
                bookListGridView.HeaderRow.TableSection = TableRowSection.TableHeader;
            }
        }
        private void GetSearchedBookList(DataTable dt)
        {
            try
            {
                lblNo.Text = dt.Rows[0]["BookId"].ToString();
                lblKitaberSerialNo.Text = dt.Rows[0]["BookSerial"].ToString();
                lblAlmariNo.Text = dt.Rows[0]["AlmariNo"].ToString();
                lblTakNo.Text = dt.Rows[0]["takno"].ToString();
                lblKitabNo.Text = dt.Rows[0]["KitabNo"].ToString();
                lblKolamNo.Text = dt.Rows[0]["KolamNo"].ToString();
                lblCopyNumber.Text = dt.Rows[0]["CopyNo"].ToString();
                lblTotalVolume.Text = dt.Rows[0]["TotalVolium"].ToString();
                lblVolumeNo.Text = dt.Rows[0]["Volium"].ToString();
                lblKhondoNo.Text = dt.Rows[0]["PartNo"].ToString();
                lblPageNo.Text = dt.Rows[0]["PageNo"].ToString();
                lblPrice.Text = dt.Rows[0]["Price"].ToString();
                lblKitaberMainName.Text = dt.Rows[0]["BookName"].ToString();
                lblKitaberSpecialName.Text = dt.Rows[0]["BookKnownName"].ToString();
                lblWritter.Text = dt.Rows[0]["WriterName"].ToString();
                lblWritterBornDate.Text = dt.Rows[0]["WriterDOB"].ToString();
                lblWritterDeathDate.Text = dt.Rows[0]["WriterDD"].ToString();
                lblWritterMajhab.Text = dt.Rows[0]["WriterMazhab"].ToString();
                lblSongkolp.Text = dt.Rows[0]["Songkolok"].ToString();
                lblTranslator.Text = dt.Rows[0]["Onubadok"].ToString();
                lblTranslatorsDate.Text = dt.Rows[0]["OnubadokDOB_DD"].ToString();
                lblTranslatorMajhab.Text = dt.Rows[0]["OnubadokMazvab"].ToString();
                lblMainLanguage.Text = dt.Rows[0]["BookLanguage"].ToString();
                lblTranslatedLanguage.Text = dt.Rows[0]["TranslateLanguage"].ToString();
                lblSubject.Text = dt.Rows[0]["Bishoy"].ToString();
                lblChapter.Text = dt.Rows[0]["Chapter"].ToString();
                lblProkashok.Text = dt.Rows[0]["Publisher"].ToString();
                lblProkashkal.Text = dt.Rows[0]["PublishDate"].ToString();
                lblProkashoni.Text = dt.Rows[0]["Publication"].ToString();
                lblProkashsthan.Text = dt.Rows[0]["PublicationPlace"].ToString();
                //lblp.Text = dt.Rows[0]["PublishYear"].ToString();
                lblSompadona.Text = dt.Rows[0]["Editor"].ToString();
                lblSongokoron.Text = dt.Rows[0]["Edition"].ToString();
                lblSarSonkhep.Text = dt.Rows[0]["suchi"].ToString();
                lblComment.Text = dt.Rows[0]["Remarks"].ToString();
                // txtbxContactMobile.Text = dt.Rows[0]["BookId"].ToString();
                //txtContactEmail.Text = dt.Rows[0]["Songkolok"].ToString();

                //if (dt.Rows.Count > 0)
                //{
                //    bookListGridView.DataSource = dt;
                //    bookListGridView.DataBind();
                //}
                //GridViewStyle();
            }
            catch (Exception ex)
            {
                string message = ex.Message;
                if (ex.InnerException != null) { message += " --> " + ex.InnerException.Message; }
                MyAlertBox("ErrorAlert(\"" + ex.GetType() + "\", \"" + message + "\", \"\");");
            }
        }
       
        protected void MyAlertBox(string alertScript)
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "ServerControlScript", alertScript, true);
        }
        protected void EditLinkButton_OnClick(object sender, EventArgs e)
        {
            try
            {
                BookBLL bookBll = new BookBLL();
                LinkButton lnkBtn = (LinkButton)sender;
                GridViewRow row = (GridViewRow)lnkBtn.NamingContainer;

                string BookId = bookListGridView.Rows[row.RowIndex].Cells[1].Text.ToString();
                LumexSessionManager.Add("BookIdForUpdate", BookId);
                Response.Redirect("Update.aspx");

            }
            catch (Exception ex)
            {
                msgbox.Attributes.Add("Class", "alert alert-warning"); msgbox.Visible = true; msgTitleLabel.Text = "Exception!!!"; msgDetailLabel.Text = ex.Message;
            }
        }
        protected void viewLinkButton_Click(object sender, EventArgs e)
        {
            try
            {
                LinkButton lnkBtn = (LinkButton)sender;
                GridViewRow row = (GridViewRow)lnkBtn.NamingContainer;
                string BookId = bookListGridView.Rows[row.RowIndex].Cells[1].Text.ToString();
                //Label lblUserId = (Label)userListGridView.Rows[row.RowIndex].Cells[0].FindControl("lblUserId");
                LumexSessionManager.Add("BookIdForView", BookId);
                Response.Redirect("View.aspx");

            }
            catch (Exception ex)
            {
                msgbox.Attributes.Add("Class", "alert alert-warning"); msgbox.Visible = true; msgTitleLabel.Text = "Exception!!!"; msgDetailLabel.Text = ex.Message;
            }
        }
    }
}